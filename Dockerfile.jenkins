# Use a trusted Jenkins LTS image as our base
FROM jenkins/jenkins:lts-jdk11

# Define an argument to accept the Docker GID from the host
ARG DOCKER_GID

# Switch to the root user to install software
USER root

# Install prerequisites for adding custom repositories
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    gnupg \
    lsb-release \
    software-properties-common \
    wget \
    apt-transport-https \
    ca-certificates

# Add Ansible PPA and Trivy repository
RUN echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu focal main" | tee /etc/apt/sources.list.d/ansible.list && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367 && \
    wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg > /dev/null && \
    echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list

# Install all main applications and clean up
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    ansible \
    ansible-lint \
    trivy && \
    rm -rf /var/lib/apt/lists/*

# Install Docker CLI in a separate layer
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y --no-install-recommends docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# Create a docker group with the GID passed from the host, then add the jenkins user to it.
RUN groupadd -g ${DOCKER_GID:-999} docker && usermod -aG docker jenkins

# Switch back to the non-privileged jenkins user
USER jenkins

# Add healthcheck to monitor the container's status
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/login || exit 1
